openapi: 3.0.0
info:
  version: 1.0.0
  title: Food Catering API
servers:
  - url: http://localhost:5000/api/v1/     
paths:
  /auth/login:
    post:
      summary: Log into system
      tags: 
      - Auth
      requestBody:
        required: true
        description: A JSON object that contains the user email and password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LoginUser'
                  - $ref: '#/components/schemas/LoginAgency'
                decriminator:
                  propertyName: role  
        '400':
          description: Provide email and password
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  
        '401':
          description: Invalid crudentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                     
  /auth/register:
    post:
      summary: Registration for parents
      tags: 
      - Auth
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUser'   
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: object     
                    properties:
                      key: 
                        type: string               
        '401':
          description: Invalid agency code
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  
        '409':
          description: 'E-mail already exsits'
          content:
            appication/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string 
  /auth/addAgency:
    post:
      summary: Add agency, private route for Admin
      tags: 
      - Auth
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAgency'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAgency' 
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: object     
                    properties:
                      key: 
                        type: string   
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                                                       
        '409':
          description: 'E-mail already exsits or invalid date'
          content:
            appication/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                                
 
  /auth/me:
    get:
      summary: Get user info
      tags: 
      - Auth
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LoginUser'
                  - $ref: '#/components/schemas/LoginAgency'
                decriminator:
                  propertyName: role    
                        
  /kid/agencyAddKid:
    post:
      summary: Add kid by agency, private route for Agency
      tags: 
      - Kid
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgencyAddKid'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /kid/agencyGetKids?page=${page}&limit=${limit}:
    get:
      summary: Get list of kids, private route for Agency
      tags:
        - Kid
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: The number of choosen page
      - in: query
        name: limit
        schema:
          type: integer
        description: The number of items     
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Kid1'
                  - $ref: '#/components/schemas/Kid1'
                  - $ref: '#/components/schemas/Kid1' 
                  - $ref: '#/components/schemas/Kid1' 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string         
  /kid/{kidCode}:
    delete:
      summary: Delete kid by kidCode, private route for Agency
      tags:
      - Kid
      parameters:
      - in: path
        name: kidCode
        schema:
          type: string
        description: Choosen Kid code    
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean 
        '404':
          description: Kid with code {kidCode} not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
        '401':
          description: Kid with code {kidCode} does not belong to your's agency
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
      

  /parent/addKid/{kidCode}:
    post:
      summary: Add kid to parent, private route for Parent
      tags: 
      - Parent
      parameters:
      - in: path
        name: kidCode
        schema:
          type: string
        description: Choosen Kid code 
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addKid'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties: 
                        firstName:
                          type: string
                        lastName:
                          type: string
                        agencyCode:
                          type: string
                        kidCode:
                          type: string
        '401':
          description: 'Invalid kid code'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
        '400':
          description: 'This kid is already added to this parent'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string   
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string    
                    
  /parent/getMyKids:
    get:
      summary: Returns all kids of parent from the system
      tags: 
      - Parent
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        firstName: 
                          type: string
                        lastName:
                          type: string
                        kidCode:
                          type: string                    
                   
  /agencies?page=${page}&limit=${limit}:
    get:
      summary: Get paginated list of agencies
      tags: 
      - Agency
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: The number of choosen page
      - in: query
        name: limit
        schema:
          type: integer
        description: The number of items     
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Agencies1'
                  - $ref: '#/components/schemas/Agencies2'
                  - $ref: '#/components/schemas/Agencies3' 
                  - $ref: '#/components/schemas/Agencies4' 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  
                    
  /agencies/{agencyCode}:
    get:
      summary: Get agency by agency's code
      tags: 
      - Agency
      parameters:
      - in: path
        name: agencyCode
        schema:
          type: string
        description: Choosen Agency's code    
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAgency'  
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string      
    delete:
      summary: Delete agency by agency's code. Parents and Kids are deleted too.
      tags: 
      - Agency
      parameters:
      - in: path
        name: agencyCode
        schema:
          type: string
        description: Choosen Agency's code    
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                                                                                                        
  /orders/{kidCode}:
    post:
      summary: Create order for choosen kid
      tags: 
      - Order
      parameters:
      - in: path
        name: kidCode
        schema:
          type: string
        description: Choosen Kid's code
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrder'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: This kid is already added to this parent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string       
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                            
        '404':
          description: Kid with code not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
        '409':
          description: Previous order has not finished OR date earlier than today
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
  /orders/summary/{kidCode}:
    post:
      summary: Get price for order
      tags: 
      - Order
      parameters:
      - in: path
        name: kidCode
        schema:
          type: string
        description: Choosen Kid's code
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrder'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: This kid is already added to this parent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string       
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                            
        '404':
          description: Kid with code not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
        '409':
          description: Previous order has not finished OR date earlier than today
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                    
  /orders/{kidCode}?page=${page}&limit=${limit}:
    get:
      summary: Get paginated list of kid's orders
      tags: 
      - Order
      parameters:
      - in: path
        name: kidCode
        schema: 
          type: string
        description: Kid code
      - in: query
        name: page
        schema:
          type: integer
        description: The number of choosen page
      - in: query
        name: limit
        schema:
          type: integer
        description: The number of items     
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Orders1'
                  - $ref: '#/components/schemas/Orders2'
                  - $ref: '#/components/schemas/Orders3'
                  - $ref: '#/components/schemas/Orders4' 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                      
  /orders/agencyOrders/{agencyCode}?page=${page}&limit=${limit}:
    get:
      summary: Get paginated list of agency's orders
      tags: 
      - Order
      parameters:
      - in: path
        name: agencyCode
        schema: 
          type: string
        description: Agency code
      - in: query
        name: page
        schema:
          type: integer
        description: The number of choosen page
      - in: query
        name: limit
        schema:
          type: integer
        description: The number of items     
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Orders1'
                  - $ref: '#/components/schemas/Orders2'
                  - $ref: '#/components/schemas/Orders3'
                  - $ref: '#/components/schemas/Orders4' 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string    
  /orders/order/{id}?page=${page}&limit=${limit}:
    get:
      summary: Get order info with paginated list of meals
      tags: 
      - Order
      parameters:
      - in: path
        name: id
        schema: 
          type: string
        description: Order's id
      - in: query
        name: page
        schema:
          type: integer
        description: The number of choosen page
      - in: query
        name: limit
        schema:
          type: integer
        description: The number of items     
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Order1'
                  - $ref: '#/components/schemas/Order2'
                  - $ref: '#/components/schemas/Order3'
                  - $ref: '#/components/schemas/Order4' 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
  /orders/date/{kidCode}:
    get:
      summary: Get available date for order
      tags: 
      - Order
      parameters:
      - in: path
        name: kidCode
        schema: 
          type: string
        description: Kid's code
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  data:
                    type: string
                    format: date
                    example: "2021-01-30"
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string 
        '404':
          description: Kid not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
  /orders/create/kids:
    get:
      summary: Get kids for order
      tags: 
      - Order
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object  
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      agencyCode:
                        type: string
                      kidCode:
                        type: string    
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string 
        '404':
          description: Kid not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string 
  /orders/stats/summary?date={date}:
    get:
      summary: Get statistics
      tags: 
      - Order
      parameters:
      - in: query
      name: date
      schema:
        type: date
      description: Date when meal is served
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object  
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        agency:
                          type: string
                        breakfast:
                          type: number
                        lunch:
                          type: number
                        soup:
                          type: number
                        mainDish:
                          type: number
                        dinner:
                          type: number  
                        teaTime:
                          type: number    
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string 
                                  
  /orders/payment/{id}:
    post:
      summary: Update payment status
      tags: 
      - Order
      parameters:
      - in: path
        name: id
        schema: 
          type: string
        description: Order's id
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string 
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  

  /orders/order/{id}/kid/{kidCode}/meal/{mealId}:
    delete:
      summary: Delete meal
      tags: 
      - Order
      parameters:
      - in: path
        name: id
        schema: 
          type: string
        description: Order's id
      - in: path
        name: kidCode
        schema:
          type: string
        description: Kid's code 
      - in: path
        name: mealId
        schema:
          type: string
        description: Meal's id          
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string 
        '404':
          description: Order not found OR Meal not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  
  /meal/addMeal:
    post:
      summary: Add meal, private route for Admin
      tags: 
      - Meal
      requestBody:
        required: true
        description: A JSON object that contains info about meal.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /meal/myMeals?date=${date}&page=${page}&limit=${limit}:
    get:
      summary: Get meals by day private route for Admin
      tags:
        - Meal
      parameters:
      - in: query
        name: date
        schema:
          type: date
        description: Date when meal is served
      - in: query
        name: page
        schema:
          type: integer
        description: The number of choosen page
      - in: query
        name: limit
        schema:
          type: integer
        description: The number of items     
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Meal'
                  - $ref: '#/components/schemas/Meal'
                  - $ref: '#/components/schemas/Meal' 
                  - $ref: '#/components/schemas/Meal' 
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string

  /meal/{id}:
    delete:
      summary: Delete meal by id, private route for Admin
      tags:
      - Meal
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Choosen Meal _id    
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean 
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string

components:
  schemas:
    Meal:
      type: object
      properties:
        type: 
          type: string
          enum:
          - 'breakfast'
          - 'lunch'
          - 'soup'  
          - 'main dish' 
          - 'dinner'
          - 'tea time'         
        description:
          type: string
        date:
          type: string
          format: date
          example: "2021-01-30" 
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginUser:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            role: 
              type: string
              enum:
              - admin
              - parent
            wallet:
              type: number           
            email:
              type: string     
            firstName:
              type: string
            lastName:
              type: string              
            agencyCode:
              type: string  
    LoginAgency:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            role: 
              type: string
              enum:
              - agency            
            email:
              type: string
            name:
              type: string
            agencyCode:
              type: string
            ordersPeriod:
              type: string
              enum: 
              - day
              - week
              - month
              - semestr
            winterTermEnd:
              type: string
              format: date
              example: "2021-01-30"
            summerTermEnd: 
              type: string
              format: date
              example: "2021-01-30"                                  
    Register: 
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        agencyCode:
          type: string
    AddAgency:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        ordersPeriod:
          type: string
          enum:
          - day
          - week
          - month
          - semestr
        winterTermEnd:
          type: string
          format: date
          example: "2021-01-30"
        summerTermEnd: 
          type: string
          format: date
          example: "2021-01-30"                                  
    AgencyAddKid: 
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        agencyCode:
          type: string

    addKid: 
      type: object
      properties:
        kidCode:
          type: string

    NextPrev:
      type: object
      properties:
        page:
          type: number
        limit:
          type: number    

    Kid1:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number 
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number    
            numberOfPages:
              type: number                                                                   
            results:
              type: array
              items:
                type: object
                properties:
                  firstName:
                    type: string
                  name:
                    lastName: string
                  agencyCode:
                    string: string
                  kidCode:
                    type: string        
    Agencies1:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number 
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number    
            numberOfPages:
              type: number                                                                   
            results:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  agencyCode:
                    type: string
                  ordersPeriod:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
    Agencies2:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number
            numberOfPages:
              type: number                  
            results:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  agencyCode:
                    type: string
                  ordersPeriod:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
    Agencies3:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number  
            numberOfPages:
              type: number                                                         
            results:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  agencyCode:
                    type: string
                  ordersPeriod:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr 
    Agencies4:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties: 
            numberOfPages:
              type: number                                                         
            results:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  agencyCode:
                    type: string
                  ordersPeriod:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr                     
    createOrder: 
      type: object
      properties:
        startDate: 
          type: string
          format: date
          example: "2021-01-30"
        orders:
          type: array
          items:
            type: object
            properties:
              day: 
                type: integer
                enum: [0, 1, 2, 3, 4, 5, 6]
              types: 
                type: array
                items:
                  type: string
                  enum: ['breakfast', 'lunch', 'soup', 'main dish', 'dinner', 'tea time']
        comments:
          type: string
        holidays: 
          type: boolean
          default: false             
    Orders1:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number 
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number    
            numberOfPages:
              type: number                                                                   
            results:
              type: array
              items:
                type: object
                properties:
                  paid:
                    type: boolean
                  _id:
                    type: string
                  agencyCode:
                    type: string
                  kidCode:
                    type: string
                  period:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
                  price: 
                    type: integer
                  comments: 
                    type: string
                  startDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
                  endDate: 
                    type: string
                    format: date
                    example: "2021-01-30"                      
    Orders2:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number
            numberOfPages:
              type: number                  
            results:
              type: array
              items:
                type: object
                properties:
                  paid:
                    type: boolean
                  _id:
                    type: string
                  agencyCode:
                    type: string
                  kidCode:
                    type: string
                  period:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
                  price: 
                    type: integer
                  comments: 
                    type: string
                  startDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
                  endDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
    Orders3:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number  
            numberOfPages:
              type: number                                                         
            results:
              type: array
              items:
                type: object
                properties:
                  paid:
                    type: boolean
                  _id:
                    type: string
                  agencyCode:
                    type: string
                  kidCode:
                    type: string
                  period:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
                  price: 
                    type: integer
                  comments: 
                    type: string
                  startDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
                  endDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
    Orders4:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties: 
            numberOfPages:
              type: number                                                         
            results:
              type: array
              items:
                type: object
                properties:
                  paid:
                    type: boolean
                  _id:
                    type: string
                  agencyCode:
                    type: string
                  kidCode:
                    type: string
                  period:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
                  price: 
                    type: integer
                  comments: 
                    type: string
                  startDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
                  endDate: 
                    type: string
                    format: date
                    example: "2021-01-30"                     
    Order1:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number 
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number    
            numberOfPages:
              type: number                                                                   
            results:
              type: object
              properties:
                paid:
                  type: boolean
                _id:
                  type: string
                agencyCode:
                  type: string
                kidCode:
                  type: string
                period:
                  type: string
                  enum: 
                  - day
                  - week
                  - month
                  - semestr
                meals:
                  type: array
                  items:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                        example: "2021-01-30"
                      _id: 
                        type: string
                      type: 
                        type: string
                        enum: ['breakfast', 'lunch', 'soup', 'main dish', 'dinner', 'tea time']
                      price:
                        type: integer    
                price: 
                  type: integer
                comments: 
                  type: string
                startDate: 
                  type: string
                  format: date
                  example: "2021-01-30"
                endDate: 
                  type: string
                  format: date
                  example: "2021-01-30"                      
    Order2:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number
            numberOfPages:
              type: number                  
            results:
              type: array
              items:
                type: object
                properties:
                  paid:
                    type: boolean
                  _id:
                    type: string
                  agencyCode:
                    type: string
                  kidCode:
                    type: string
                  period:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
                  meals:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                          example: "2021-01-30"
                        _id: 
                          type: string
                        type: 
                          type: string
                          enum: ['breakfast', 'lunch', 'soup', 'main dish', 'dinner', 'tea time']
                        price:
                          type: integer    
                  price: 
                    type: integer
                  comments: 
                    type: string
                  startDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
                  endDate: 
                    type: string
                    format: date
                    example: "2021-01-30"  
    Order3:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number  
            numberOfPages:
              type: number                                                         
            results:
              type: array
              items:
                type: object
                properties:
                  paid:
                    type: boolean
                  _id:
                    type: string
                  agencyCode:
                    type: string
                  kidCode:
                    type: string
                  period:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
                  meals:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                          example: "2021-01-30"
                        _id: 
                          type: string
                        type: 
                          type: string
                          enum: ['breakfast', 'lunch', 'soup', 'main dish', 'dinner', 'tea time']
                        price:
                          type: integer    
                  price: 
                    type: integer
                  comments: 
                    type: string
                  startDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
                  endDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
    Order4:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties: 
            numberOfPages:
              type: number                                                         
            results:
              type: array
              items:
                type: object
                properties:
                  paid:
                    type: boolean
                  _id:
                    type: string
                  agencyCode:
                    type: string
                  kidCode:
                    type: string
                  period:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
                  meals:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                          example: "2021-01-30"
                        _id: 
                          type: string
                        type: 
                          type: string
                          enum: ['breakfast', 'lunch', 'soup', 'main dish', 'dinner', 'tea time']
                        price:
                          type: integer    
                  price: 
                    type: integer
                  comments: 
                    type: string
                  startDate: 
                    type: string
                    format: date
                    example: "2021-01-30"
                  endDate: 
                    type: string
                    format: date
                    example: "2021-01-30" 
