openapi: 3.0.0
info:
  version: 1.0.0
  title: Food Catering API
servers:
  - url: http://localhost:5000/api/v1/     
paths:
  /auth/login:
    post:
      summary: Log into system
      tags: 
      - Auth
      requestBody:
        required: true
        description: A JSON object that contains the user email and password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LoginUser'
                  - $ref: '#/components/schemas/LoginAgency'
                decriminator:
                  propertyName: role  
        '400':
          description: Provide email and password
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  
        '401':
          description: Invalid crudentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                     
  /auth/register:
    post:
      summary: Registration for parents
      tags: 
      - Auth
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUser'   
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: object     
                    properties:
                      key: 
                        type: string               
        '401':
          description: Invalid agency code
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  
        '409':
          description: 'E-mail already exsits'
          content:
            appication/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string              
  /auth/addAgency:
    post:
      summary: Add agency, private route for Admin
      tags: 
      - Auth
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAgency'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAgency' 
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  errors:
                    type: object     
                    properties:
                      key: 
                        type: string   
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                                                       
        '409':
          description: 'E-mail already exsits'
          content:
            appication/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                         
  /kid/agencyAddKid:
    post:
      summary: Add kid by agency, private route for Agency
      tags: 
      - Kid
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgencyAddKid'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /parent/addKid:
    post:
      summary: Add kid to parent, private route for Parent
      tags: 
      - Parent
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addKid'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties: 
                        firstName:
                          type: string
                        lastName:
                          type: string
                        agencyCode:
                          type: string
                        kidCode:
                          type: string
        '401':
          description: 'Invalid kid code'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
        '400':
          description: 'This kid is already added to this parent'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string   
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string    
                    
  /parent/getMyKids:
    get:
      summary: Returns all kids of parent from the system
      tags: 
      - Parent
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        firstName: 
                          type: string
                        lastName:
                          type: string
                        kidCode:
                          type: string                    
                   
  /agencies?page=${page}&limit=${limit}:
    get:
      summary: Get paginated list of agencies
      tags: 
      - Agency
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: The number of choosen page
      - in: query
        name: limit
        schema:
          type: integer
        description: The number of items     
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Agencies1'
                  - $ref: '#/components/schemas/Agencies2'
                  - $ref: '#/components/schemas/Agencies3' 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string  
                    
  /agencies/{agencyCode}:
    get:
      summary: Get agency by agency's code
      tags: 
      - Agency
      parameters:
      - in: path
        name: agencyCode
        schema:
          type: string
        description: Choosen Agency's code    
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAgency'  
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string      
    delete:
      summary: Delete agency by agency's code. Parents and Kids are deleted too.
      tags: 
      - Agency
      parameters:
      - in: path
        name: agencyCode
        schema:
          type: string
        description: Choosen Agency's code    
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean 
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                                                                                                        
  /orders/{kidCode}:
    post:
      summary: Create order for choosen kid
      tags: 
      - Order
      parameters:
      - in: path
        name: kidCode
        schema:
          type: string
        description: Choosen Kid's code
      requestBody:
        required: true
        description: A JSON object that contains crudentials.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrder'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: This kid is already added to this parent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string       
        '403':
          description: Role is not authorized to access this route
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string                            
        '404':
          description: Kid with code not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string
        '409':
          description: Previous order has not finished OR incompatible order period OR date earlier than today
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  error:
                    type: string    
components:
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginUser:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            role: 
              type: string
              enum:
              - admin
              - parent
            wallet:
              type: number           
            email:
              type: string     
            firstName:
              type: string
            lastName:
              type: string              
            agencyCode:
              type: string  
    LoginAgency:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            role: 
              type: string
              enum:
              - agency            
            email:
              type: string
            name:
              type: string
            agencyCode:
              type: string
            ordersPeriod:
              type: string
              enum: 
              - day
              - week
              - month
              - semestr
            winterTermEnd:
              type: string
              format: date
              example: "2021-01-30"
            summerTermEnd: 
              type: string
              format: date
              example: "2021-01-30"                                  
    Register: 
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        agencyCode:
          type: string
    AddAgency:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        ordersPeriod:
          type: string
          enum:
          - day
          - week
          - month
          - semestr
        winterTermEnd:
          type: string
          format: date
          example: "2021-01-30"
        summerTermEnd: 
          type: string
          format: date
          example: "2021-01-30"                                  
    AgencyAddKid: 
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        agencyCode:
          type: string

    addKid: 
      type: object
      properties:
        kidCode:
          type: string

    NextPrev:
      type: object
      properties:
        page:
          type: number
        limit:
          type: number      
    Agencies1:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number 
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number    
            numberOfPages:
              type: number                                                                   
            results:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  agencyCode:
                    type: string
                  ordersPeriod:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
    Agencies2:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            next:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number
            numberOfPages:
              type: number                  
            results:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  agencyCode:
                    type: string
                  ordersPeriod:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr
    Agencies3:
      type: object
      properties:
        success: 
          type: boolean
        data:
          type: object
          properties:
            prev:
              type: object 
              properties:
                page:
                  type: number
                limit:
                  type: number  
            numberOfPages:
              type: number                                                         
            results:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  agencyCode:
                    type: string
                  ordersPeriod:
                    type: string
                    enum: 
                    - day
                    - week
                    - month
                    - semestr 
    createOrder: 
      type: object
      properties:
        period: 
          type: string
        startDate: 
          type: string
          format: date
          example: "2021-01-30"
        orders:
          type: array
          items:
            type: object
            properties:
              day: 
                type: integer
                enum: [0, 1, 2, 3, 4, 5, 6]
              types: 
                type: array
                items:
                  type: string
                  enum: ['breakfast', 'lunch', 'soup', 'main dish', 'dinner', 'tea time']


